{"version":3,"file":"static/js/85.365c3dd3.chunk.js","mappings":"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","sources":["API/api.jsx","components/cast/cast.styled.jsx","components/cast/cast.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst options = {\n  method: 'GET',\n  headers: {\n    accept: 'application/json',\n    Authorization:\n      'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJkMjY5NDk2ZDc1Mzk0ZTliMTQ2NWJmYzc3Mzc5OGE4NSIsInN1YiI6IjY0YzNjMDgxZWMzNzBjMDBjNTZhOTU0MCIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.Xkdg2IbTLBAaEJ9DsaPevd9dysMr2OPR_oZKuDZdofQ',\n  },\n};\nexport async function getTopFilm() {\n  const response = await axios.get(\n    'https://api.themoviedb.org/3/trending/all/day?language=en-US',\n    options\n  );\n  console.log(response.data);\n  return response.data;\n}\nexport async function getSearch(search) {\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/search/movie?query=${search}&include_adult=false&language=en-US&page=1`,\n    options\n  );\n  console.log(response.data);\n  return response.data;\n}\nexport async function getFilmById(id) {\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/movie/${id}?language=en-US`,\n    options\n  );\n  console.log(response.data);\n  return response.data;\n}\nexport async function getFilmCastById(id) {\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/movie/${id}/credits?language=en-US`,\n    options\n  );\n  console.log(response.data);\n  return response.data;\n}\n\nexport async function getFilmReviewsById(id) {\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/movie/${id}/reviews?language=en-US&page=1`,\n    options\n  );\n  console.log(response.data);\n  return response.data;\n}\n","import styled from 'styled-components';\n\nexport const List = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 16px;\n`;\n\nexport const Item = styled.li`\n  outline: 1px black;\n`;\n\nexport const Text = styled.p`\n  margin-top: 8px;\n  color: rgb(17, 17, 17);\n  text-align: center;\n`;\n","import { useParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { getFilmCastById } from 'API/api';\nimport { List, Item, Text } from './cast.styled';\n\nconst Cast = () => {\n  const { movieId } = useParams();\n  const [castObject, setCastObject] = useState({});\n  const { cast } = castObject;\n\n  useEffect(() => {\n    async function getCast() {\n      try {\n        setCastObject({});\n        const searchCast = await getFilmCastById(movieId);\n        console.log(searchCast);\n        setCastObject(searchCast);\n      } catch (error) {\n        console.error('Error fetching cast:', error);\n      }\n    }\n    getCast();\n  }, [movieId]);\n\n  return (\n    <section>\n      <List>\n        {cast &&\n          cast.map(item => (\n            <Item key={item.id}>\n              <img\n                src={\n                  item.profile_path\n                    ? `https://image.tmdb.org/t/p/w200${item.profile_path}`\n                    : 'https://via.placeholder.com/200x300.png?text=Foto+Not+Available'\n                }\n                alt={item.original_name}\n              />\n              <Text>{item.original_name}</Text>\n              <Text>{item.character}</Text>\n            </Item>\n          ))}\n      </List>\n    </section>\n  );\n};\n\nexport default Cast;\n"],"names":["options","method","headers","accept","Authorization","getTopFilm","_getTopFilm","apply","arguments","_asyncToGenerator","_regeneratorRuntime","_callee","response","_context","prev","next","axios","sent","console","log","data","abrupt","stop","getSearch","_x","_getSearch","_callee2","search","_context2","concat","getFilmById","_x2","_getFilmById","_callee3","id","_context3","getFilmCastById","_x3","_getFilmCastById","_callee4","_context4","getFilmReviewsById","_x4","_getFilmReviewsById","_callee5","_context5","List","styled","_templateObject","_taggedTemplateLiteral","Item","_templateObject2","Text","_templateObject3","movieId","useParams","_useState","useState","_useState2","_slicedToArray","castObject","setCastObject","cast","useEffect","_getCast","searchCast","t0","error","getCast","_jsx","children","map","item","_jsxs","src","profile_path","alt","original_name","character"],"sourceRoot":""}