{"version":3,"file":"static/js/85.da7b6818.chunk.js","mappings":"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","sources":["API/api.jsx","components/cast/cast.styled.jsx","components/cast/cast.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst options = {\n  method: 'GET',\n  headers: {\n    accept: 'application/json',\n    Authorization:\n      'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJkMjY5NDk2ZDc1Mzk0ZTliMTQ2NWJmYzc3Mzc5OGE4NSIsInN1YiI6IjY0YzNjMDgxZWMzNzBjMDBjNTZhOTU0MCIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.Xkdg2IbTLBAaEJ9DsaPevd9dysMr2OPR_oZKuDZdofQ',\n  },\n};\n\nexport async function getTopFilm() {\n  const response = await axios.get(\n    'https://api.themoviedb.org/3/trending/all/day?language=en-US',\n    options\n  );\n  return response.data;\n}\n\nexport async function getSearch(search) {\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/search/movie?query=${search}&include_adult=false&language=en-US&page=1`,\n    options\n  );\n  return response.data;\n}\n\nexport async function getFilmById(id) {\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/movie/${id}?language=en-US`,\n    options\n  );\n  return response.data;\n}\n\nexport async function getFilmCastById(id) {\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/movie/${id}/credits?language=en-US`,\n    options\n  );\n  return response.data;\n}\n\nexport async function getFilmReviewsById(id) {\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/movie/${id}/reviews?language=en-US&page=1`,\n    options\n  );\n  return response.data;\n}\n","import styled from 'styled-components';\nexport const CastSection = styled.section`\n  padding: 20px 0px;\n`;\nexport const CastHeader = styled.h2`\n  font-size: 25px;\n  font-weight: 500;\n  text-align: center;\n`;\nexport const List = styled.ul`\n  margin-top: 20px;\n  display: flex;\n  flex-wrap: wrap;\n  gap: 16px;\n  justify-content: center;\n`;\n\nexport const Item = styled.li`\n  outline: 1px black;\n  max-width: 200px;\n`;\n\nexport const Text = styled.p`\n  overflow-wrap: break-word;\n  margin-top: 8px;\n  color: rgb(17, 17, 17);\n  text-align: center;\n`;\n","import { useParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { getFilmCastById } from 'API/api';\n\nimport { List, CastSection, CastHeader, Item, Text } from './cast.styled';\n\nconst Cast = () => {\n  const { movieId } = useParams();\n  const [castObject, setCastObject] = useState({});\n  const { cast } = castObject;\n\n  useEffect(() => {\n    async function getCast() {\n      try {\n        setCastObject({});\n        const searchCast = await getFilmCastById(movieId);\n        setCastObject(searchCast);\n      } catch (error) {\n        console.error('Error fetching cast:', error);\n      }\n    }\n    getCast();\n  }, [movieId]);\n\n  return (\n    <CastSection>\n      <CastHeader>Cast</CastHeader>\n      {cast && (\n        <List>\n          {cast.map(item => (\n            <Item key={item.id}>\n              <img\n                src={\n                  item.profile_path\n                    ? `https://image.tmdb.org/t/p/w200${item.profile_path}`\n                    : 'https://via.placeholder.com/200x300.png?text=Foto+Not+Available'\n                }\n                alt={item.original_name}\n              />\n              <Text>{item.original_name}</Text>\n              <Text>{item.character}</Text>\n            </Item>\n          ))}\n        </List>\n      )}\n    </CastSection>\n  );\n};\n\nexport default Cast;\n"],"names":["options","method","headers","accept","Authorization","getTopFilm","_getTopFilm","apply","arguments","_asyncToGenerator","_regeneratorRuntime","_callee","response","_context","prev","next","axios","sent","abrupt","data","stop","getSearch","_x","_getSearch","_callee2","search","_context2","concat","getFilmById","_x2","_getFilmById","_callee3","id","_context3","getFilmCastById","_x3","_getFilmCastById","_callee4","_context4","getFilmReviewsById","_x4","_getFilmReviewsById","_callee5","_context5","CastSection","styled","_templateObject","_taggedTemplateLiteral","CastHeader","_templateObject2","List","_templateObject3","Item","_templateObject4","Text","_templateObject5","movieId","useParams","_useState","useState","_useState2","_slicedToArray","castObject","setCastObject","cast","useEffect","_getCast","searchCast","t0","console","error","getCast","_jsxs","children","_jsx","map","item","src","profile_path","alt","original_name","character"],"sourceRoot":""}